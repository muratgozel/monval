{"version":3,"file":"index.js","sources":["../../../src/Money.js","../../../src/Monval.js"],"sourcesContent":["export class Money {\n  monval=null\n  number=null\n  currency=null\n\n  constructor(monval, number, currency) {\n    this.monval = monval\n    this.number = number\n    this.currency = currency\n  }\n\n  add(numberOrRate, currencyCode=null) {\n    currencyCode = this.monval.isCurrency(currencyCode) ? currencyCode.toUpperCase() : this.currency\n    const isRate = typeof numberOrRate === 'string' && numberOrRate.indexOf('%') !== -1\n\n    if (isRate) {\n      const rate = parseFloat(numberOrRate.replace('%', '').trim())\n\n      if (this.monval.isNan(rate)) {\n        throw new Error(`Couldn't read rate from \"${numberOrRate.replace('%', '').trim()}\".`)\n      }\n\n      this.number = this.number + (this.number * rate / 100)\n    }\n    else {\n      const money2 = this.monval.create(numberOrRate, currencyCode)\n      if (money2.currency === this.currency) {\n        this.number += money2.number\n      }\n      else {\n        money2.exchange(this.currency)\n        this.number += money2.number\n      }\n    }\n\n    return this\n  }\n\n  subtract(numberOrRate, currencyCode=null) {\n    currencyCode = this.monval.isCurrency(currencyCode) ? currencyCode.toUpperCase() : this.currency\n    const isRate = typeof numberOrRate === 'string' && numberOrRate.indexOf('%') !== -1\n\n    if (isRate) {\n      const rate = parseFloat(numberOrRate.replace('%', '').trim())\n\n      if (this.monval.isNan(rate)) {\n        throw new Error(`Couldn't read rate from \"${numberOrRate.replace('%', '').trim()}\".`)\n      }\n\n      this.number = this.number - (this.number * rate / 100)\n    }\n    else {\n      const money2 = this.monval.create(numberOrRate, currencyCode)\n      if (money2.currency === this.currency) {\n        this.number -= money2.number\n      }\n      else {\n        money2.exchange(this.currency)\n        this.number -= money2.number\n      }\n    }\n\n    return this\n  }\n\n  exchange(target) {\n    target = target.toUpperCase()\n\n    if (!this.monval.isCurrency(target)) {\n      throw new Error(`Invalid currency.`)\n    }\n\n    if (!this.monval.isObject(this.monval.rates)) {\n      throw new Error(`Exchange rates not found. Load the rates first by monval.rates = {}`)\n    }\n\n    if (!this.monval.rates.hasOwnProperty(target)) {\n      throw new Error(`The currency you specified not found in the rates.`)\n    }\n\n    this.number = this.number * (this.monval.rates[target] / this.monval.rates[this.currency])\n    this.currency = target\n\n    return this\n  }\n\n  toFixed(decilen=null) {\n    const dlen = Number.isInteger(decilen) ? decilen : this.monval.decilen\n    const str = this.monval.round(this.number, dlen).toString()\n\n    if (dlen > 0) {\n      if (str.indexOf('.') === -1) {\n        return str + '.' + Array.apply(null, Array(dlen)).map(Number.prototype.valueOf, 0).join('')\n      }\n\n      const outputlen = str.split('.')[1].length\n      if (dlen > outputlen) {\n        return str + Array.apply(null, Array(dlen - outputlen)).map(Number.prototype.valueOf, 0).join('')\n      }\n    }\n\n    return str\n  }\n\n  toFloat() {\n    return this.number\n  }\n\n  toObject() {\n    return {\n      float: this.toFloat(),\n      currency: this.currency\n    }\n  }\n\n  pretty() {\n    const currency = this.monval.currencySymbolUnicodeMap.hasOwnProperty(this.currency)\n      ? String.fromCharCode( parseInt(this.monval.currencySymbolUnicodeMap[this.currency], 16) )\n      : this.currency\n    return currency + ' ' + this.toFixed()\n  }\n\n  pad(len, char='0') {\n    let value = this.toFixed()\n    while (value.length < len) value = char + value\n    return value\n  }\n}","import {Money} from './Money.js'\n\nexport const currencies = [\n  \"AED\",\"AFN\",\"ALL\",\"AMD\",\"ANG\",\"AOA\",\"ARS\",\"AUD\",\"AWG\",\"AZN\",\"BAM\",\"BBD\",\"BDT\",\"BGN\",\"BHD\",\"BIF\",\"BMD\",\"BND\",\n  \"BOB\",\"BRL\",\"BSD\",\"BTC\",\"BTN\",\"BWP\",\"BYN\",\"BZD\",\"CAD\",\"CDF\",\"CHF\",\"CLF\",\"CLP\",\"CNH\",\"CNY\",\"COP\",\"CRC\",\"CUC\",\n  \"CUP\",\"CVE\",\"CZK\",\"DJF\",\"DKK\",\"DOP\",\"DZD\",\"EGP\",\"ERN\",\"ETB\",\"EUR\",\"FJD\",\"FKP\",\"GBP\",\"GEL\",\"GGP\",\"GHS\",\"GIP\",\n  \"GMD\",\"GNF\",\"GTQ\",\"GYD\",\"HKD\",\"HNL\",\"HRK\",\"HTG\",\"HUF\",\"IDR\",\"ILS\",\"IMP\",\"INR\",\"IQD\",\"IRR\",\"ISK\",\"JEP\",\"JMD\",\n  \"JOD\",\"JPY\",\"KES\",\"KGS\",\"KHR\",\"KMF\",\"KPW\",\"KRW\",\"KWD\",\"KYD\",\"KZT\",\"LAK\",\"LBP\",\"LKR\",\"LRD\",\"LSL\",\"LYD\",\"MAD\",\n  \"MDL\",\"MGA\",\"MKD\",\"MMK\",\"MNT\",\"MOP\",\"MRU\",\"MUR\",\"MVR\",\"MWK\",\"MXN\",\"MYR\",\"MZN\",\"NAD\",\"NGN\",\"NIO\",\"NOK\",\"NPR\",\n  \"NZD\",\"OMR\",\"PAB\",\"PEN\",\"PGK\",\"PHP\",\"PKR\",\"PLN\",\"PYG\",\"QAR\",\"RON\",\"RSD\",\"RUB\",\"RWF\",\"SAR\",\"SBD\",\"SCR\",\"SDG\",\n  \"SEK\",\"SGD\",\"SHP\",\"SLL\",\"SOS\",\"SRD\",\"SSP\",\"STD\",\"STN\",\"SVC\",\"SYP\",\"SZL\",\"THB\",\"TJS\",\"TMT\",\"TND\",\"TOP\",\"TRY\",\n  \"TTD\",\"TWD\",\"TZS\",\"UAH\",\"UGX\",\"USD\",\"UYU\",\"UZS\",\"VEF\",\"VES\",\"VND\",\"VUV\",\"WST\",\"XAF\",\"XAG\",\"XAU\",\"XCD\",\"XDR\",\n  \"XOF\",\"XPD\",\"XPF\",\"XPT\",\"YER\",\"ZAR\",\"ZMW\",\"ZWL\"\n]\n\nclass Monval {\n  rates={}\n  currency='XXX'\n  currencies=currencies\n  currencySymbolUnicodeMap={\n    TRY: '20BA', USD: '0024', EUR: '20ac', GBP: '00A3',\n    JPY: '00A5', AMD: '058F', AFN: '060B', THB: '0E3F',\n    SVC: '20A1', CRC: '20A1', INR: '20B9', BTC: '20BF'\n  }\n  decilen=2\n\n  constructor() {\n  }\n\n  create(input, code=null) {\n    let number = 0\n    let currency = typeof code === 'string' && this.isCurrency(code) ? code.toUpperCase() : this.currency\n\n    if (this.isNumber(input)) {\n      number = input\n    }\n\n    if (typeof input === 'string' && input.indexOf(' ') === -1) {\n      number = parseFloat(input)\n    }\n\n    if (typeof input === 'string' && input.indexOf(' ') !== -1) {\n      const [part1, part2] = input.split(' ')\n\n      if (this.isCurrency(part1)) {\n        number = parseFloat(part2)\n        currency = part1.toUpperCase()\n      }\n      else if (this.isCurrency(part2)) {\n        number = parseFloat(part1)\n        currency = part2.toUpperCase()\n      }\n      else {}\n    }\n\n    if (this.isNan(number) || !this.isNumber(number)) {\n      throw new Error(`Couldn't recognize the input. ` +\n        `Valid kind of inputs are .create(\"USD 1.23\"), .create(\"1.23\", \"EUR\"), .create(\"1.23\")`)\n    }\n\n    return new Money(this, number, currency)\n  }\n\n  round(n, d, algorithm='GAUSSIAN') {\n    switch (algorithm) {\n      case 'GAUSSIAN':\n        const x = n * Math.pow(10, d)\n        const r = Math.round(x)\n        const br = Math.abs(x) % 1 === 0.5 ? (r % 2 === 0 ? r : r-1) : r\n        return br / Math.pow(10, d)\n      default:\n        throw new Error('Unsupported rounding algorithm.')\n    }\n  }\n\n  isCurrency(v) {\n    return typeof v === 'string' && this.currencies.indexOf(v.toUpperCase()) !== -1\n  }\n\n  isNumber(v) {\n    return typeof v == 'number' && Number.isFinite(v) === true\n  }\n\n  isNan(v) {\n    return typeof v == 'number' && v != +v\n  }\n\n  isObject(v) {\n    return Object.prototype.toString.call(v) === '[object Object]'\n  }\n}\n\nexport const monval = new Monval()"],"names":["Money","monval","number","currency","numberOrRate","currencyCode","isCurrency","toUpperCase","isRate","rate","replace","isNan","Error","money2","create","exchange","target","isObject","rates","hasOwnProperty","decilen","dlen","str","round","toString","Array","apply","Number","prototype","valueOf","join","outputlen","split","length","float","toFloat","currencySymbolUnicodeMap","String","fromCharCode","toFixed","len","char","value","currencies","Monval","TRY","USD","EUR","GBP","JPY","AMD","AFN","THB","SVC","CRC","INR","BTC","input","code","isNumber","part1","part2","n","d","algorithm","x","Math","pow","r","br","abs","v","Object","call"],"mappings":"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"}